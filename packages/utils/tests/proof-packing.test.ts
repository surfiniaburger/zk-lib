import { packGroth16Proof, unpackGroth16Proof } from "../src/proof-packing"
import { PackedGroth16Proof } from "../src/types"

describe("Packing", () => {
    describe("# packGroth16Proof/unpackGroth16Proof", () => {
        it("Should return a packed proof", async () => {
            const packedGroth16Proof: PackedGroth16Proof = [
                "17455271319858434926499425298909035958151998411844026248469741053531717339265",
                "1809640036543354632013745302316626518616523187165817131215850368558792945688",
                "10412520870708905678204104934659225353238049211955054582580393588023887103880",
                "14387711194338264772134518585903894086292145110571258428309451069689177771358",
                "12307829496191548911018295360088625722009064391654440053843981662837679609522",
                "1074015954757675925234943284833359999770015015487488325909311565628458071018",
                "14707416138790909353926802249502541593845488564118694583832847440405336745095",
                "17279707263918322800069730194548839248077368939211596384106376344385089451889"
            ]

            const originalProof = unpackGroth16Proof(packedGroth16Proof)
            const proof = packGroth16Proof(originalProof)

            expect(proof).toStrictEqual(packedGroth16Proof)
        })
    })
})
